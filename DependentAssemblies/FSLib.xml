<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FSLib</name>
    </assembly>
    <members>
        <member name="M:FSLib.Value.String.TemplateReplace(System.String,System.String[],System.String[])">
            <summary>
            替换模板字符
            </summary>
            <param name="template"></param>
            <param name="tags"></param>
            <param name="dest"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Value.String.TemplateReplace(System.Text.StringBuilder,System.String[],System.String[])">
            <summary>
            替换模板字符
            </summary>
            <param name="template"></param>
            <param name="tags"></param>
            <param name="dest"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Value.String.HTMLEncode(System.String)">
            <summary>
            HTML编码
            </summary>
            <param name="OrgString"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.HTMLDecode(System.String)">
            <summary>
            HTML解码
            </summary>
            <param name="OrgString"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.RemoveLimitHTMLTags(System.String)">
            <summary>
            移除可能危险的HTML标签
            </summary>
            <param name="org"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Value.String.UrlEncode(System.String)">
            <summary>
            URL编码
            </summary>
            <param name="OrgString"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.UrlDecode(System.String)">
            <summary>
            URL解码
            </summary>
            <param name="OrgString"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.Topic_Enc(System.String)">
            <summary>
            编码标题数据
            </summary>
            <param name="SorceStr"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.Topic_Enc(System.String,System.Int32)">
            <summary>
            编码标题数据
            </summary>
            <param name="SorceStr"></param>
            <param name="Limit">瀛楃闀垮害闄愬埗榛樿50</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.StrEnc(System.String)">
            <summary>
            不限制字数的时候编码
            </summary>
            <param name="SorceStr"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.ShowString(System.String)">
            <summary>
            替换指定字符为转义字符
            </summary>
            <param name="OrgStr"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.ShowString(System.String,System.String)">
            <summary>
            替换指定字符为转义字符
            </summary>
            <param name="OrgStr"></param>
            <param name="ChrRep"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.ShowScriptString(System.String)">
            <summary>
            显示脚本字符
            </summary>
            <param name="OrgStr"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.DeEnc(System.String,System.Boolean)">
            <summary>
            将编码后的字符反解码
            </summary>
            <param name="SrcString"></param>
            <param name="UseHTMLEncode"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.SqlEncode(System.String)">
            <summary>
            替换SQL语句的字符
            </summary>
            <param name="OrgString"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.XORObO(System.String,System.String)">
            <summary>
            将两个字符串分别对应异或加密,并输出最后的值
            </summary>
            <param name="S1">字符串一</param>
            <param name="S2">字符串二</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.XORObO(System.String,System.String,System.Boolean)">
            <summary>
            将两个字符串分别对应异或加密,并输出最后的值
            </summary>
            <param name="S1">字符串一</param>
            <param name="S2">字符串二</param>
            <param name="MD5Encode">是否用MD5计算输出的字符串的Hash值,默认为是</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.CheckIfCharExists(System.String,System.String)">
            <summary>
            检查是否全部都是允许的字符
            </summary>
            <param name="CharEnable">允许的字符</param>
            <param name="ToCheck">待检查的字符串</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.GetValue(System.String,System.Int32,System.Boolean)">
            <summary>
            根据长度限制获得字符串
            </summary>
            <param name="sStr">源字符</param>
            <param name="Limit">限制</param>
            <param name="ShowIgnoreFlag">限制后是否显示省略号</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.SqlFilter(System.String)">
            <summary>
            过滤SQL语句中的特殊符号
            </summary>
            <param name="sql"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.ReplacePathChr(System.String,System.String)">
            <summary>
            替换路径特殊字符
            </summary>
            <param name="s">原字符</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.String.CheckNullOrEmpty(System.Boolean,System.String[])">
            <summary>
            判断一个队列的字符串是否为空
            </summary>
            <param name="IsAnd"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.HardWare.HardWareInfo">
            <summary>
            硬件信息类
            </summary>
        </member>
        <member name="M:FSLib.HardWare.HardWareInfo.NetworkAdapterPhysicAddress">
            <summary>
            获得用户的网卡地址
            </summary>
            <returns></returns>
            <remarks>获得网卡的物理地址</remarks>
        </member>
        <member name="M:FSLib.HardWare.HardWareInfo.GetCpuID">
            <summary>
            获得CPU的序列号
            </summary>
            <returns></returns>
        </member>
        <member name="P:FSLib.HardWare.HardWareInfo.NetwordAdapters">
            <summary>
            获得所有网卡的信息集合
            </summary>
        </member>
        <member name="P:FSLib.HardWare.HardWareInfo.Cpu">
            <summary>
            获得CPU信息集合
            </summary>
        </member>
        <member name="T:FSLib.DateTimeExtract">
            <summary>
            日期时间扩展类
            </summary>
        </member>
        <member name="M:FSLib.DateTimeExtract.MakeDateTimeFriendly(System.DateTime)">
            <summary>
            将时间显示转换为更加友好的方式
            </summary>
            <param name="dt">要显示的时间</param>
            <returns>转换的结果</returns>
        </member>
        <member name="M:FSLib.DateTimeExtract.ToJSTicks(System.DateTime)">
            <summary>
            获得Javascript中时间刻度
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Data.OleDb.OleDbExtract">
            <summary>
            OLEDB 的扩展类
            </summary>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.ChangeIdEntity(System.Data.OleDb.OleDbConnection,System.String,System.String,System.Int32)">
            <summary>
            更改主键列的自增值开始数据
            </summary>
            <param name="connection">数据库连接</param>
            <param name="tableName">数据表名</param>
            <param name="idFieldName">自增列名称</param>
            <param name="seed">开始数据</param>
            <returns>开始数据</returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.CreateCommand(System.Data.OleDb.OleDbConnection,System.String,System.Boolean)">
            <summary>
            创建数据库命令
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="sql">要执行的语句</param>
            <param name="isProcedure">是否是存储过程</param>
            <returns>创建的结果</returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandNonQuery(System.Data.OleDb.OleDbCommand)">
            <summary>
            运行命令-NonQuery方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandNonQuery(System.Data.OleDb.OleDbCommand,System.Boolean)">
            <summary>
            运行命令-NonQuery方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandScalar(System.Data.OleDb.OleDbCommand)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandScalar(System.Data.OleDb.OleDbCommand,System.Boolean)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandScalar``1(System.Data.OleDb.OleDbCommand)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandScalar``1(System.Data.OleDb.OleDbCommand,System.Boolean)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandReader``1(System.Data.OleDb.OleDbCommand)">
            <summary>
            运行命令-DataReader方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.RunCommandReader``1(System.Data.OleDb.OleDbCommand,System.Boolean)">
            <summary>
            运行命令-DataReader方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.AddParameter(System.Data.OleDb.OleDbCommand,System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.AddParameter(System.Data.OleDb.OleDbCommand,System.String,System.Data.OleDb.OleDbType,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.AddParameter(System.Data.OleDb.OleDbCommand,System.String,System.Data.OleDb.OleDbType,System.Int32,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.OleDb.OleDbExtract.AddParameter(System.Data.OleDb.OleDbCommand,System.String,System.Int32)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.StringExtract.JoinThis(System.String[],System.String)">
            <summary>
            将一个元素数组按照指定的分隔符连接起来
            </summary>
            <param name="obj">元素数组</param>
            <param name="Sep">分隔符</param>
            <returns>完成的字符串</returns>
        </member>
        <member name="M:FSLib.StringExtract.Split(System.String,System.String)">
            <summary>
            按照指定的分隔符分割字符串
            </summary>
            <param name="str">字符串</param>
            <param name="Sep">分隔符</param>
            <returns>返回分割的结果</returns>
        </member>
        <member name="M:FSLib.StringExtract.Split(System.String,System.String,System.Boolean)">
            <summary>
            按照指定的分隔符分割字符串
            </summary>
            <param name="str">字符串</param>
            <param name="Sep">分隔符</param>
            <param name="RemoveEmptyEntries">是否忽略空的字符串内容</param>
            <returns>返回分割的结果</returns>
        </member>
        <member name="M:FSLib.StringExtract.TemplateTagReplace(System.String,System.String[],System.String[])">
            <summary>
            替换模板字符
            </summary>
            <param name="template">模板内容</param>
            <param name="tags">标签数组</param>
            <param name="dest">内容数组</param>
            <returns>替换后的结果</returns>
        </member>
        <member name="M:FSLib.StringExtract.ToInt32(System.String,System.Int32)">
            <summary>
            将字符串转换为整型
            </summary>
            <param name="str">字符串</param>
            <param name="defaultValue">如果转换不了,默认值</param>
            <returns>整型</returns>
        </member>
        <member name="M:FSLib.StringExtract.ToInt32(System.String)">
            <summary>
            将字符串转换为整型
            </summary>
            <param name="str">字符串</param>
            <returns>整型</returns>
        </member>
        <member name="M:FSLib.StringExtract.Join(System.String[],System.String)">
            <summary>
            将字符串数组转换成一个字符串
            </summary>
            <param name="obj"></param>
            <param name="Sep"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.StringExtract.IsNullOrEmpty(System.String)">
            <summary>
            判断一个字符串是不是为空
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.StringExtract.ParseToDateTime(System.String,System.DateTime)">
            <summary>
            将字符串转换为日期
            </summary>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.StringExtract.ParseToDateTime(System.String)">
            <summary>
            将字符串转换为日期
            </summary>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.StringExtract.EncodeToJsExpression(System.String)">
            <summary>
            将字符串转义为表达式
            </summary>
            <param name="value">要转换的字符串</param>
            <returns>转义后的结果</returns>
        </member>
        <member name="M:FSLib.StringExtract.DefaultForEmpty(System.String,System.String)">
            <summary>
            为字符串设定默认值
            </summary>
            <param name="value">要设置的值</param>
            <param name="defaultValue">如果要设定的值为空，则返回此默认值</param>
            <returns>设定后的结果</returns>
        </member>
        <member name="M:FSLib.StringExtract.AsDirectoryInfo(System.String)">
            <summary>
            转换为文件夹对象
            </summary>
            <param name="folder">文件夹路径</param>
            <returns>对应的文件夹信息对象</returns>
        </member>
        <member name="M:FSLib.StringExtract.AsFileInfo(System.String)">
            <summary>
            转换为文件信息对象
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.StringExtract.AsPathInfo(System.String)">
            <summary>
            转换为路径信息对象
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Network.Http.Client">
            <summary>
            HTTP Client
            </summary>
        </member>
        <member name="F:FSLib.Network.Http.Client.lastTicks">
            <summary>
            上次请求的时间
            </summary>
        </member>
        <member name="M:FSLib.Network.Http.Client.OnDataCompressing(FSLib.Network.Http.Client.DecompressingEventArgs)">
            <summary>
            正在解压缩数据
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.Network.Http.Client.OnLocationRedirect(FSLib.Network.Http.Client.LocationRedirectEventArgs)">
            <summary>
            将要重定向
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.Network.Http.Client.#ctor">
            <summary>
            构造新的HttpClient实例
            </summary>
        </member>
        <member name="M:FSLib.Network.Http.Client.#ctor(System.String)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
        </member>
        <member name="M:FSLib.Network.Http.Client.#ctor(System.String,FSLib.Network.Http.HttpClientContext)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
            <param name="context">Cookie及Referer</param>
        </member>
        <member name="M:FSLib.Network.Http.Client.#ctor(System.String,FSLib.Network.Http.HttpClientContext,System.Boolean)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
            <param name="context">Cookie及Referer</param>
            <param name="keepContext">是否自动在不同的请求间保留Cookie, Referer</param>
        </member>
        <member name="M:FSLib.Network.Http.Client.AttachFile(System.String,System.String)">
            <summary>
            在请求中添加要上传的文件
            </summary>
            <param name="fileName">要上传的文件路径</param>
            <param name="fieldName">文件字段的名称(相当于&lt;input type=file name=fieldName&gt;)里的fieldName)</param>
        </member>
        <member name="M:FSLib.Network.Http.Client.AttachFile(System.Byte[],System.String,System.String)">
            <summary>
            在请求中添加要上传的文件
            </summary>
            <param name="data">要上传的文件内容</param>
            <param name="fileName">文件名</param>
            <param name="fieldName">文件字段的名称(相当于&lt;input type=file name=fieldName&gt;)里的fieldName)</param>
        </member>
        <member name="M:FSLib.Network.Http.Client.SetPostData(System.String)">
            <summary>
            手动设置回发数据
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:FSLib.Network.Http.Client.SetPostData(System.String,System.Text.Encoding)">
            <summary>
            手动设置回发数据
            </summary>
            <param name="content"></param>
            <param name="encode"></param>
        </member>
        <member name="M:FSLib.Network.Http.Client.EnableGlobalContextTransfer(System.Net.CookieCollection)">
            <summary>
            启用全局Cookies记录
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:FSLib.Network.Http.Client.ResetHeaders">
            <summary>
            重置请求标头
            </summary>
        </member>
        <member name="M:FSLib.Network.Http.Client.Reset">
            <summary>
            清空PostingData, Files, StartPoint, EndPoint, ResponseHeaders, 并把Verb设置为Get.
            在发出一个包含上述信息的请求后,必须调用此方法或手工设置相应属性以使下一次请求不会受到影响.
            </summary>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetResponse">
            <summary>
            发出一次新的请求,并返回获得的回应
            调用此方法永远不会触发StatusUpdate事件.
            </summary>
            <returns>相应的HttpWebResponse</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetResponse(System.String)">
            <summary>
            发出一次新的请求,并返回获得的回应
            调用此方法永远不会触发StatusUpdate事件.
            </summary>
            <returns>相应的HttpWebResponse</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetStream">
            <summary>
            发出一次新的请求,并返回回应内容的流
            调用此方法永远不会触发StatusUpdate事件.
            </summary>
            <returns>包含回应主体内容的流</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetBytes">
            <summary>
            发出一次新的请求,并以字节数组形式返回回应的内容
            调用此方法会触发StatusUpdate事件
            </summary>
            <returns>包含回应主体内容的字节数组</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetBytes(System.Net.HttpWebResponse)">
            <summary>
            发出一次新的请求,并以字节数组形式返回回应的内容
            调用此方法会触发StatusUpdate事件
            </summary>
            <returns>包含回应主体内容的字节数组</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetString">
            <summary>
            发出一次新的请求,以Http头,或Html Meta标签,或DefaultEncoding指示的编码信息对回应主体解码
            调用此方法会触发StatusUpdate事件
            </summary>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetString(System.Net.HttpWebResponse)">
            <summary>
            以Http头,或Html Meta标签,或DefaultEncoding指示的编码信息对回应主体解码
            </summary>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetString(System.Byte[])">
            <summary>
            以Http头,或Html Meta标签,或DefaultEncoding指示的编码信息对回应主体解码
            </summary>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.GetString(System.Text.Encoding)">
            <summary>
            发出一次新的请求,对回应的主体内容以指定的编码进行解码
            调用此方法会触发StatusUpdate事件
            </summary>
            <param name="encoding">指定的编码</param>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.HeadContentLength">
            <summary>
            发出一次新的Head请求,获取资源的长度
            此请求会忽略PostingData, Files, StartPoint, EndPoint, Verb
            </summary>
            <returns>返回的资源长度</returns>
        </member>
        <member name="M:FSLib.Network.Http.Client.SaveAsFile(System.String)">
            <summary>
            发出一次新的请求,把回应的主体内容保存到文件
            调用此方法会触发StatusUpdate事件
            如果指定的文件存在,它会被覆盖
            </summary>
            <param name="fileName">要保存的文件路径</param>
        </member>
        <member name="M:FSLib.Network.Http.Client.SaveAsFile(System.String,FSLib.Network.Http.FileExistsAction)">
            <summary>
            发出一次新的请求,把回应的主体内容保存到文件
            调用此方法会触发StatusUpdate事件
            </summary>
            <param name="fileName">要保存的文件路径</param>
            <param name="existsAction">指定的文件存在时的选项</param>
            <returns>是否向目标文件写入了数据</returns>
        </member>
        <member name="E:FSLib.Network.Http.Client.DataDecompressing">
            <summary>
            正在解压缩数据
            </summary>
        </member>
        <member name="E:FSLib.Network.Http.Client.LocationRedirect">
            <summary>
            将要重定向
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.UseGlobalContextTransfer">
            <summary>
            是否使用全局Cookies记录
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.Delay">
            <summary>
            自上次请求后的延迟，以毫秒为单位
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.KeepContext">
            <summary>
            是否自动在不同的请求间保留Cookie, Referer
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.DefaultLanguage">
            <summary>
            期望的回应的语言
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.DefaultEncoding">
            <summary>
            GetString()如果不能从HTTP头或Meta标签中获取编码信息,则使用此编码来获取字符串
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.Verb">
            <summary>
            指示发出Get请求还是Post请求
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.Files">
            <summary>
            要上传的文件.如果不为空则自动转为Post请求
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.PostingData">
            <summary>
            要发送的Form表单信息
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.PostData">
            <summary>
            手动设置回发数据
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.Url">
            <summary>
            获取或设置请求资源的地址
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.ResponseHeaders">
            <summary>
            用于在获取回应后,暂时记录回应的HTTP头
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.Accept">
            <summary>
            获取或设置期望的资源类型
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.RequestContentType">
            <summary>
            请求的资源类型
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.UserAgent">
            <summary>
            获取或设置请求中的Http头User-Agent的值
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.Context">
            <summary>
            获取或设置Cookie及Referer
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.StartPoint">
            <summary>
            获取或设置获取内容的起始点,用于断点续传,多线程下载等
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.EndPoint">
            <summary>
            获取或设置获取内容的结束点,用于断点续传,多下程下载等.
            如果为0,表示获取资源从StartPoint开始的剩余内容
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.AutoDecodingGzip">
            <summary>
            是否自动解压缩GZIP
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.AutoRedirect">
            <summary>
            是否允许自动转向
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.ResponseStatusCode">
            <summary>
            暂时记录请求的状态码
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.RequestEncoding">
            <summary>
            请求的编码格式
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.AutoReset">
            <summary>
            在请求后是否自动复位(仅在 <see cref="M:FSLib.Network.Http.Client.GetString"/> 或 <see cref="M:FSLib.Network.Http.Client.SaveAsFile(System.String)"/> 中有效)
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.ContentType">
            <summary>
            请求的类型
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.Client.Timeout">
            <summary>
            请求的超时时间（毫秒）
            </summary>
        </member>
        <member name="T:FSLib.Network.Http.Client.DecompressingEventArgs">
            <summary>
            正在解压缩数据
            </summary>
        </member>
        <member name="T:FSLib.Network.Http.Client.LocationRedirectEventArgs">
            <summary>
            事件数据-将要转向
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.HttpClientContext.GlobalCookieCollection">
            <summary>
            全局Cookies记录
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.StatusUpdateEventArgs.BytesGot">
            <summary>
            已经下载的字节数
            </summary>
        </member>
        <member name="P:FSLib.Network.Http.StatusUpdateEventArgs.BytesTotal">
            <summary>
            资源的总字节数
            </summary>
        </member>
        <member name="T:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase">
            <summary>
            SQL语句助手基类
            </summary>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.DateTimeDefiner">
            <summary>
            日期定界符
            </summary>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.AddElement(System.String,System.String,FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType)">
            <summary>
            加入一个元素
            </summary>
            <param name="Key">列名</param>
            <param name="Value">值</param>
            <param name="ValueType">类型</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.AddElement(System.String,System.Object,FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType)">
            <summary>
            加入一个元素
            </summary>
            <param name="Key">列名</param>
            <param name="Value">值</param>
            <param name="ValueType">类型</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.AddStringElement(System.String,System.String,System.Int32)">
            <summary>
            加入一个元素
            </summary>
            <param name="Key">列名</param>
            <param name="Value">值</param>
            <param name="WordLimit">字符串限制长度</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.AddElement(FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.SqlValueElement)">
            <summary>
            加入一个元素
            </summary>
            <param name="Element"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.GetAllKeys">
            <summary>
            获得所有的列集合
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.IsElementExist(System.String)">
            <summary>
            判断一个列是否已经添加
            </summary>
            <param name="Key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.RemoveKey(System.String)">
            <summary>
            移除一个列
            </summary>
            <param name="Key"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ClearAllKeys">
            <summary>
            清除所有已经添加的列
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.AutoChangeSpecChar">
            <summary>
            是否自动更换转义字符
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType">
            <summary>
            列类型
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType.DateTime">
            <summary>
            日期时间
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType.Eval">
            <summary>
            表达式
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType.NowString">
            <summary>
            现在时间
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType.Number">
            <summary>
            数字
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType.Str">
            <summary>
            字符串
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.ColType.Boolean">
            <summary>
            逻辑值
            </summary>
        </member>
        <member name="T:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.SqlValueElement">
            <summary>
            列元素
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.SqlValueElement.Key">
            <summary>
            列名
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.SqlValueElement.Value">
            <summary>
            值
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase.SqlValueElement.ValueType">
            <summary>
            列值的类型
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.IO.FileIOHelper">
            <summary>
            文件操作辅助类
            </summary>
            <remarks>
            本辅助操作类的作用是为了简化一些代码，实际上考虑到程序的性能问题时，可能还是由自已来针对
            特定的File Directory FileInfo DirectoryInfo Path Drive DriveInfo来操作可能更好
            </remarks>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.OpenDirectoryInBrowser(System.String)">
            <summary>
            打开目录浏览
            </summary>
            <param name="path">要打开的路径</param>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.LocateFileInExplorer(System.String)">
            <summary>
            定位文件
            </summary>
            <param name="path">要打开的路径</param>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.FileIsExist(System.String)">
            <summary>
            文件是否存在或无权访问
            </summary>
            <param name="path">相对路径或绝对路径</param>
            <returns>如果是目录也返回false</returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.DirectoryIsExist(System.String)">
            <summary>
            目录是否存在或无权访问
            </summary>
            <param name="Path">相对路径或绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.FileIsReadOnly(System.String)">
            <summary>
            文件是否只读
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.SetFileReadonly(System.String,System.Boolean)">
            <summary>
            设置文件是否只读
            </summary>
            <param name="fullpath"></param>
            <param name="flag">true表示只读，反之</param>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetFileSize(System.String)">
            <summary>
            取文件长度
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetFileCreateTime(System.String)">
            <summary>
            取文件创建时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetLastWriteTime(System.String)">
            <summary>
            取文件最后存储时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.IsPathRooted(System.String)">
            <summary>
            指示一个路径是相对路径还是绝对路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetSystemDirectory">
            <summary>
            取系统目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetSpeicalFolder(System.Environment.SpecialFolder)">
            <summary>
            取系统的特别目录
            </summary>
            <param name="folderType"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetTempPath">
            <summary>
            返回当前系统的临时目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetInvalidPathChars">
            <summary>
            取路径中不充许存在的字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetCurrentDirectory">
            <summary>
            取当前目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.SetCurrentDirectory(System.String)">
            <summary>
            设当前目录
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.CreateTempZeroByteFile">
            <summary>
            创建一个零字节临时文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetRandomFileName">
            <summary>
            创建一个随机文件名，不创建文件本身
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.CompareFilesHash(System.String,System.String)">
            <summary>
            判断两个文件的哈希值是否一致
            </summary>
            <param name="fileName1"></param>
            <param name="fileName2"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.CalcuDirectorySize(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            计算一个目录的大小
            </summary>
            <param name="di">指定目录</param>
            <param name="includeSubDir">是否包含子目录</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.CopyDirectory(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            复制目录到目标目录
            </summary>
            <param name="source">源目录</param>
            <param name="destination">目标目录</param>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.GetAllDrives">
            <summary>
            取系统所有的逻辑驱动器
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileIOHelper.IsDrivePath(System.String)">
            <summary>
            检测一个目录是不是根目录标志
            </summary>
            <param name="path">路径名称</param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Drawing.Color.Color.ColorTable">
            <summary>
            彩色表RGBQUAD结构的阵列，其中包含索引图像的真实RGB值。
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Color.Color.ColorTable.rgbBlue">
            <summary>
            指定蓝色强度
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Color.Color.ColorTable.rgbGreen">
            <summary>
            指定绿色强度
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Color.Color.ColorTable.rgbRed">
            <summary>
            指定红色强度
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Color.Color.ColorTable.rgbReserved">
            <summary>
             保留，设置为0
            </summary>
        </member>
        <member name="T:FSLib.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:FSLib.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:FSLib.Properties.Resources.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="M:FSLib.IO.FileDrag.#ctor(System.IntPtr)">
            <summary>
            构造函数
            </summary>
            <param name="h"></param>
        </member>
        <member name="M:FSLib.IO.FileDrag.Dispose(System.Boolean)">
            <summary>
            释放对象
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:FSLib.IO.FileDrag.FileDropedEvent">
            <summary>
            文件拖放的定义
            </summary>
        </member>
        <member name="M:FSLib.IO.FileDrag.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            过滤消息
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="E:FSLib.IO.FileDrag.FileDroped">
            <summary>
            文件拖放的事件
            </summary>
        </member>
        <member name="T:FSLib.IO.FileDrag.FileDropedEventHandler">
            <summary>
            文件拖放的代理
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:FSLib.Value.Other.GetRandomString">
            <summary>
            获得指定长度的随机字符串
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Other.GetRandomString(System.Int32)">
            <summary>
            获得指定长度的随机字符串
            </summary>
            <param name="Length">长度</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Other.GetRandomString(System.Int32,FSLib.Value.Other.ContentType)">
            <summary>
            获得指定长度的随机字符串
            </summary>
            <param name="Length">长度</param>
            <param name="Contents">包含的字符</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Other.GetRandomString(System.Int32,FSLib.Value.Other.ContentType,FSLib.Value.Other.OutType)">
            <summary>
            获得指定长度的随机字符串
            </summary>
            <param name="Length">长度</param>
            <param name="Contents">包含的字符</param>
            <param name="OT">输出的种类</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.ObjectExtract.ToJSON(System.Object)">
            <summary>
            转换为JSON
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.ObjectExtract.ToJSON(System.Object,System.IO.Stream)">
            <summary>
            转换为JSON
            </summary>
            <param name="obj"></param>
            <param name="stream"></param>
        </member>
        <member name="M:FSLib.ObjectExtract.FromJSON``1(System.String)">
            <summary>
            从JSON转换
            </summary>
            <param name="obj"></param>
            <param name="recursionDepth"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.ObjectExtract.FromJSON``1(System.IO.Stream)">
            <summary>
            从JSON转换
            </summary>
            <param name="obj"></param>
            <param name="recursionDepth"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.TxtFileEncoding.GetEncodingType(System.String)">
            <summary>
            取文件编码
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.TxtFileEncoding.GetEncodingType(System.IO.FileStream)">
            <summary>
            取文件编码
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IO.IScanFilter">
            <summary>
            扫描过滤条件
            </summary>
        </member>
        <member name="M:FSLib.IO.IScanFilter.IsMatch(System.String)">
            <summary>
            是否符合匹配
            </summary>
            <param name="name">需要匹配的名字</param>
            <returns>如果匹配为true反之为false</returns>
        </member>
        <member name="M:FSLib.Configration.Config.LoadConfig(System.String)">
            <summary>
            加载指定的配置文件
            </summary>
            <param name="ConfigFilePath"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.ReloadConfig">
            <summary>
            重新加载配置
            </summary>
        </member>
        <member name="M:FSLib.Configration.Config.CheckSchema(System.String[])">
            <summary>
            检测一个指定的INI文件是否是期待的版本
            </summary>
            <param name="nodesRequired"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Configration.Config.LoadConfig(System.String,System.Text.Encoding)">
            <summary>
            加载指定的配置文件
            </summary>
            <param name="ConfigFilePath"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.SaveConfig">
            <summary>
            保存配置
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.GetAllConfig">
            <summary>
            获得所有配置
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.ClearAllNodes">
            <summary>
            清理当前所有配置节
            </summary>
        </member>
        <member name="M:FSLib.Configration.Config.GetConfigNode(System.String)">
            <summary>
            获得指定小节的所有配置
            </summary>
            <param name="ConfigNodeName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.GetConfig(System.String,System.String,System.Boolean)">
            <summary>
            获得以布尔值表示的配置（0为False，否则为True）
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="DefaultValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.SetConfig(System.String,System.String,System.Boolean)">
            <summary>
            设置配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="Value"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.GetConfig(System.String,System.String,System.Int32)">
            <summary>
            获得整数格式的配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="DefaultValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.GetConfig(System.String,System.String,System.DateTime)">
            <summary>
            获得日期格式的设定
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="DefaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Configration.Config.SetConfig(System.String,System.String,System.DateTime)">
            <summary>
            设置配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="Value"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.SetConfig(System.String,System.String,System.Int32)">
            <summary>
            设置配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="Value"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.GetConfig(System.String,System.String,System.Single)">
            <summary>
            获得浮点小数格式的配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="DefaultValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.SetConfig(System.String,System.String,System.Single)">
            <summary>
            设置配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="Value"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.GetConfig(System.String,System.String,System.String)">
            <summary>
            获得字符串格式的配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="DefaultValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.SetConfig(System.String,System.String,System.String)">
            <summary>
            设置配置
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <param name="Value"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.RemoveConfigKey(System.String,System.String)">
            <summary>
            删除一个配置节
            </summary>
            <param name="NodeName"></param>
            <param name="KeyName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.AddConfigNode(System.String)">
            <summary>
            增加一个新的配置节
            </summary>
            <param name="NodeName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.AddConfigNode(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            增加一个新的配置节
            </summary>
            <param name="NodeName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.IsConfigNodeExist(System.String)">
            <summary>
            确认一个配置节是否存在
            </summary>
            <param name="NodeName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.RemoveConfigNode(System.String)">
            <summary>
            删除一个配置节
            </summary>
            <param name="NodeName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.GetNodeKeyCount(System.String)">
            <summary>
            获得指定节点的键数目
            </summary>
            <param name="nodename">节点名</param>
            <returns>数目</returns>
            <remarks>如果没有这个配置节，则会返回-1</remarks>
        </member>
        <member name="P:FSLib.Configration.Config.CurrentConfigPath">
            <summary>
            当前使用的配置路径
            </summary>
        </member>
        <member name="T:FSLib.Configration.Config.ConfigUnloadException">
            <summary>
            配置尚未初始化
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.ConfigUnloadException.#ctor">
            <summary>
            new
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Configration.Config.ConfigSaveException">
            <summary>
            配置保存
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.ConfigSaveException.#ctor">
            <summary>
            new
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Configration.Config.ConfigLoadException">
            <summary>
            配置尚未初始化
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Configration.Config.ConfigLoadException.#ctor">
            <summary>
            new
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.CollectionExtract">
            <summary>
            集合类的扩展方法
            </summary>
        </member>
        <member name="M:FSLib.CollectionExtract.SplitPage``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32@,System.Int32@)">
            <summary>
            对泛型列表的数据进行分页
            </summary>
            <typeparam name="T">列表的类型</typeparam>
            <param name="obj">原始数据</param>
            <param name="pagesize">每页尺寸</param>
            <param name="pageindex">页码，引用型，当超过范围时会自动修正</param>
            <param name="totalpage">传出，表示当前共有多少页</param>
            <returns>分页后的结果</returns>
        </member>
        <member name="M:FSLib.Value.Number.IsNum(System.String)">
            <summary>
            检测是否是数字
            </summary>
            <param name="ck"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.IsNum(System.String,System.Int32)">
            <summary>
            检测是否是数字
            </summary>
            <param name="ck"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.GetSkipNumber(System.Int32,System.Int32@,System.Int32,System.Int32@)">
            <summary>
            计算在分页中需要跳过的数据行数
            </summary>
            <param name="pagesize">每页尺寸</param>
            <param name="pageindex">页码</param>
            <param name="totalCount">总数目</param>
            <param name="totalPage">总页数</param>
            <returns>需要跳过的数目</returns>
        </member>
        <member name="M:FSLib.Value.Number.CheckValueRange(System.Int32)">
            <summary>
            检查数值的范围
            </summary>
            <param name="V1">值一</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.CheckValueRange(System.Int32,System.Int32)">
            <summary>
            检查数值的范围
            </summary>
            <param name="V1">值一</param>
            <param name="MinV">最小值</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.CheckValueRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            检查数值的范围
            </summary>
            <param name="V1">值一</param>
            <param name="MinV">最小值</param>
            <param name="MaxV">最大值</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.CheckValueRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            检查数值的范围
            </summary>
            <param name="V1">值一</param>
            <param name="MinV">最小值</param>
            <param name="MaxV">最大值</param>
            <param name="DefaultV">不在范围时的输出</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.DateDecode(System.Double)">
            <summary>
            对日期进行反解码
            </summary>
            <param name="st"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.DateEncode">
            <summary>
            产生时间标签
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.DateEncode(System.DateTime)">
            <summary>
            产生时间标签
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Value.Number.convertToHex(System.Int64)">
            <summary>
            将任意的正整数转化为十六进制表示
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Helper">
            <summary>
            静态辅助对象
            </summary>
        </member>
        <member name="M:FSLib.Helper.ToJSTicks">
            <summary>
            获得Javascript中时间刻度
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSLib.Drawing.Icon.IconStruct.IconDirentry">
            <summary>
            图标资源索引目录结构
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.bWidth">
            <summary>
            width, in pixels, of the image：图像宽度，以象素为单位。一个字节
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.bHeight">
            <summary>
            height, in pixels, of the image：图像高度，以象素为单位。一个字节
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.bColorCount">
            <summary>
            number of colors in image (0 if >=8bpp)：图像中的颜色数（如果是>=8bpp的位图则为0）
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.bReserved">
            <summary>
            reserved ( must be 0)：保留字必须是0
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.wPalnes">
            <summary>
            color planes：为目标设备说明位面数，其值将总是被设为1
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.wBitCount">
            <summary>
             bits per pixel：每象素所占位数。
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.dwBytesInRes">
            <summary>
            how many bytes in this resource?：这份资源所占字节数
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDirentry.dwImageOffSet">
            <summary>
            where in the file is this image?：图像数据（iconimage）起点偏移位置。
            </summary>
        </member>
        <member name="T:FSLib.Drawing.Icon.IconStruct.IconDir">
            <summary>
            文件头
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDir.idReserved">
            <summary>
            reserved (must be 0)：保留字必须是0
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDir.idType">
            <summary>
            resource type (1 for icons)：资源类型，1是图标，2就是光标了?
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDir._idCount">
            <summary>
            how many images?：有几个图像资源
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconDir.idEntries">
            <summary>
            an entry for each image (idcount of 'em)：每个图像的入口定义
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Icon.IconStruct.IconDir.idCount">
            <summary>
            图像资源数目
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconData.idImageDatas">
            <summary>
            图像的数据
            </summary>
        </member>
        <member name="T:FSLib.Drawing.Icon.IconStruct.IconImage">
            <summary>
            图像数据段
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconImage.icHeader">
            <summary>
            DIB位图信息头, used: bisize, biwidth, biheight(xorH+andH)即2倍高度, biplanes, bibitcount, bisizeimage.
            all other members must be 0.
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconImage.icColors">
            <summary>
            色彩表:rgbquad
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconImage.icXor">
            <summary>
            dib bits for xor mask：DIB结构的图像数据。XOR掩码？
            本文讨论的格式以16色的ICON文件为主，每字节表示两个象素4bpp。
            对于256色的文件，icxor数组每字节表示一个象素即：8bpp。
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Icon.IconStruct.IconImage.icAnd">
            <summary>
            dib bits for and mask：DIB结构的图像数据。AND掩码？1bpp
            </summary>
        </member>
        <member name="M:FSLib.Data.LinqExtract.TableExtension.Delete``1(System.Data.Linq.Table{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            扩展删除方法
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="table"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Data.LinqExtract.PartialEvaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="M:FSLib.Network.Helper.GetStringByTag(System.String,System.String,System.String)">
            <summary>
            根据开始标记和结束标记来获得指定内容
            </summary>
            <param name="content"></param>
            <param name="begin"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Icon.IconHelper.LoadIcon(System.String)">
            <summary>
            从指定的文件中加载图标
            </summary>
            <param name="path">图标文件路径</param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Data.CommonExtract">
            <summary>
            通用数据库的扩展方法
            </summary>
        </member>
        <member name="M:FSLib.Data.CommonExtract.ClearTable(System.Data.IDbConnection,System.String)">
            <summary>
            清除指定数据表中的数据
            </summary>
            <param name="connection">数据库连接</param>
            <param name="tableName">数据表名</param>
        </member>
        <member name="M:FSLib.Data.CommonExtract.CreateCommand(System.Data.IDbConnection,System.String,System.Boolean)">
            <summary>
            创建数据库命令
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="sql">要执行的语句</param>
            <param name="isProcedure">是否是存储过程</param>
            <returns>创建的结果</returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandNonQuery(System.Data.IDbCommand)">
            <summary>
            运行命令-NonQuery方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandNonQuery(System.Data.IDbCommand,System.Boolean)">
            <summary>
            运行命令-NonQuery方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandScalar(System.Data.IDbCommand)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandScalar(System.Data.IDbCommand,System.Boolean)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandScalar``1(System.Data.IDbCommand)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandScalar``1(System.Data.IDbCommand,System.Boolean)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandReader``1(System.Data.IDbCommand)">
            <summary>
            运行命令-DataReader方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.CommonExtract.RunCommandReader``1(System.Data.IDbCommand,System.Boolean)">
            <summary>
            运行命令-DataReader方式
            </summary>
            <param name="command">命令</param>
            <param name="closeConnection">是否加入随DataReader关闭连接选项</param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IO.FileProcess">
            <summary>
            文件IO的直接操作
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IO.FileProcess.ShowSize(System.Decimal)">
            <summary>
            将大小转换成字节大小的显示方式
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileProcess.GetDirectorySize(System.String,System.String)">
            <summary>
            获得指定路径所有文件和文件夹的体积
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileProcess.CreateDirectory(System.String)">
            <summary>
            建立文件夹,从根文件夹开始建起,必须是绝对路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IO.FileProcess.CreateDirectory(System.String,System.String)">
            <summary>
            建立文件夹同时建立子文件夹
            </summary>
            <param name="RootPath">基础路径,这个路径必须是已经存在的且能访问的</param>
            <param name="SubPath">扩展路径,根据这个在基础路径上进行扩展递归建立文件夹</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IO.FileProcess.MoveContents(System.String,System.String,System.String)">
            <summary>
            移动文件夹内容,将源文件夹下的所有内容包括文件夹
            </summary>
            <param name="SorPath">源路径</param>
            <param name="DstPath">目标路径</param>
            <param name="ExtPath">调用递归处理的时候使用的,你不应该使用它</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IO.FileProcess.CopyContents(System.String,System.String,System.String)">
            <summary>
            复制文件夹内容,将源文件夹下的所有内容包括文件夹
            </summary>
            <param name="SorPath">源路径</param>
            <param name="DstPath">目标路径</param>
            <param name="ExtPath">调用递归处理的时候使用的,你不应该使用它</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IO.FileProcess.CopyScema(System.String,System.String,System.String)">
            <summary>
            复制文件夹结构,但是不复制里面的文件
            </summary>
            <param name="SorPath">源路径</param>
            <param name="DstPath">目标路径</param>
            <param name="ExtPath">程序调用,你不应该调用它</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IO.FileProcess.MoveFile(System.String,System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="SrcFile"></param>
            <param name="BasePath"></param>
            <param name="DistPath"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Data.SqlHelper.SQLBuilder.MultiSQLBuilder">
            <summary>
            提供对多行数据库语句执行的组合支持
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.MultiSQLBuilder.#ctor">
            <summary>
            创建一个默认的实例对象
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.MultiSQLBuilder.AppendSQL(System.String)">
            <summary>
            增加一行可以执行的SQL
            </summary>
            <param name="SQL"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.MultiSQLBuilder.AppendVarDeclare(System.String)">
            <summary>
            增加变量声明
            </summary>
            <param name="VarName"></param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Data.SqlHelper.SQLBuilder.MultiSQLBuilder.GetSQL">
            <summary>
            返回最终合成的SQL
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.ValueExtract.IsValueInRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            判断一个数值是否在指定范围内
            </summary>
            <param name="Value"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.ValueExtract.ToSizeDescription(System.UInt64)">
            <summary>
            转换为尺寸显示方式
            </summary>
            <param name="size">大小</param>
            <returns>尺寸显示方式</returns>
        </member>
        <member name="M:FSLib.ValueExtract.ToSizeDescription(System.Int64)">
            <summary>
            转换为尺寸显示方式
            </summary>
            <param name="size">大小</param>
            <returns>尺寸显示方式</returns>
        </member>
        <member name="M:FSLib.ValueExtract.ToSizeDescription(System.Int32)">
            <summary>
            转换为尺寸显示方式
            </summary>
            <param name="size">大小</param>
            <returns>尺寸显示方式</returns>
        </member>
        <member name="M:FSLib.IO.FileReplaceHelper.AddFileReplaceToReg(System.String,System.String,System.Boolean)">
            <summary>
            使用注册表替换（重启后替换文件的方法来替换文件）
            </summary>
            <param name="orgFile"></param>
            <param name="destFile"></param>
            <param name="addDisableWFPFlag"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader">
            <summary>
            位图信息头
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biSize">
            <summary>
            Bitmap Header Size，BITMAPINFOHEADER段尺寸。*
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biWidth">
            <summary>
            Width 1 dword 位图的宽度，以象素为单位*
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biHeight">
            <summary>
            Height 1 dword 位图的高度，以象素为单位*
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biPlanes">
            <summary>
            Planes 1 word 位图的位面数（注：该值将总是1）*
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biBitCount">
            <summary>
            WORD;Bits Per Pixel,每个象素的位数*
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biCompression">
            <summary>
            DWORD,Compression,压缩说明：
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biSizeImage">
            <summary>
            DWORD;Bitmap Data Size 1 dword 用字节数表示的位图数据的大小。该数必须是4的倍数*
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biXPelsPerMeter">
            <summary>
            LONG;HResolution 1 dword 用象素/米表示的水平分辨率
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biYPelsPerMeter">
            <summary>
            LONG;VResolution 1 dword 用象素/米表示的垂直分辨率
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biClrUsed">
            <summary>
            DWORD;Colors 1 dword 位图使用的颜色数。如8-比特/象素表示为100h或者 256.
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.BitMapInfo.BitMapInfoHeader.biClrImportant">
            <summary>
            DWORD;Important Colors 1 dword 指定重要的颜色数。当该域的值等于颜色数时（或者等于0时），表示所有颜色都一样重要
            </summary>
        </member>
        <member name="T:FSLib.Data.SqlServer.DataHelper`1">
            <summary>
            用于数据库构造中的实现辅助类
            </summary>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.#ctor">
            <summary>
            私有构造函数，不允许创建对象实例
            </summary>
        </member>
        <member name="F:FSLib.Data.SqlServer.DataHelper`1.s_typecache">
            <summary>
            类型缓存
            </summary>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateInstanceFromObject(System.Data.IDataReader)">
            <summary>
            由数据读取器创建一个新的对象
            </summary>
            <param name="dr">数据读取器</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateInstanceFromObject(System.Data.IDataReader,System.Boolean)">
            <summary>
            由数据读取器创建一个新的对象
            </summary>
            <param name="dr">数据读取器</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateInstanceFromObject(System.Data.DataRow)">
            <summary>
            由数据行创建一个新的对象
            </summary>
            <param name="dr">数据读取器</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateListFromObject(System.Data.IDataReader)">
            <summary>
            由数据读取器创建一个List对象
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateListFromObject(System.Data.IDataReader,System.Boolean)">
            <summary>
            由数据读取器创建一个List对象
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateListFromObject(System.Data.DataRow[])">
            <summary>
            由数据行数组创建一个List对象
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateListFromObject(System.Data.DataTable)">
            <summary>
            由数据表创建一个List对象
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateSqlCommandForUpdate(`0,System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            创建一个更新的SQL语句
            </summary>
            <param name="obj">数据对象</param>
            <param name="cmd">命令行</param>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateSqlCommandForUpdate(`0,System.Data.IDbConnection)">
            <summary>
            创建一个更新的SQL语句
            </summary>
            <param name="obj">数据对象</param>
            <param name="cmd">命令行</param>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateSqlCommandForAdd(`0,System.Data.IDbConnection)">
            <summary>
            创建一个更新的SQL语句
            </summary>
            <param name="obj">数据对象</param>
            <param name="cmd">命令行</param>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateDeleteSql(System.Data.IDbConnection,System.Object[])">
            <summary>
            生成删除命令
            </summary>
            <param name="identityKeys"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateDeleteSql(System.Data.IDbConnection,System.Collections.Generic.List{System.Object})">
            <summary>
            Creates the delete SQL.
            </summary>
            <param name="conn">The conn.</param>
            <param name="identityValues">The identity values.</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.CreateDeleteSql(System.Data.IDbConnection,System.String)">
            <summary>
            生成删除命令
            </summary>
            <param name="identityKeys"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.AddModelToDB(`0,System.Data.IDbConnection)">
            <summary>
            Adds the model to DB.
            </summary>
            <param name="model">The model.</param>
            <param name="conn">The conn.</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.UpdateModelToDB(`0,System.Data.IDbConnection)">
            <summary>
            Updates the model to DB.
            </summary>
            <param name="model">The model.</param>
            <param name="conn">The conn.</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.DeleteModelFromDB(System.Data.IDbConnection,System.String)">
            <summary>
            Deletes the model from DB.
            </summary>
            <param name="conn">The conn.</param>
            <param name="identityKeyList">The identity key list.</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.DeleteModelFromDB(System.Data.IDbConnection,System.Object[])">
            <summary>
            Deletes the model from DB.
            </summary>
            <param name="conn">The conn.</param>
            <param name="identityKeyList">The identity key list.</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.DeleteModelFromDB(System.Data.IDbConnection,System.Collections.Generic.List{System.Object})">
            <summary>
            Deletes the model from DB.
            </summary>
            <param name="conn">The conn.</param>
            <param name="identityKeyList">The identity key list.</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.GetTypePropertyInfo(System.Type)">
            <summary>
            获得类型的属性类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.DataHelper`1.GetTypeKeyPropertyInfo(System.Type)">
            <summary>
            获得类型的属性类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Network.Mail.MailHelper.SendEmail(FSLib.Network.Mail.MailHelper.MailDomain,System.Net.Mail.MailMessage)">
            <summary>
            用预设的邮箱发送邮件
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.Network.Mail.MailHelper.SendEmail(FSLib.Network.Mail.MailHelper.MailDomain,System.String,System.String,System.String,System.String)">
            <summary>
            快速发送邮件
            </summary>
            <param name="server"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Network.Mail.MailHelper.SendEmail(FSLib.Network.Mail.MailHelper.MailDomain,System.String,System.String,System.String,System.String,System.Text.Encoding,System.Net.Mail.MailAddress[])">
            <summary>
            用预设的邮箱发送邮件
            </summary>
            <param name="FromMail"></param>
            <param name="Subject"></param>
            <param name="Body"></param>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Network.Mail.MailHelper.MailDomain">
            <summary>
            邮件服务器定义
            </summary>
        </member>
        <member name="P:FSLib.Network.Mail.MailHelper.MailDomain.ServerDomain">
            <summary>
            服务器地址
            </summary>
        </member>
        <member name="P:FSLib.Network.Mail.MailHelper.MailDomain.ServerPort">
            <summary>
            服务器端口
            </summary>
        </member>
        <member name="P:FSLib.Network.Mail.MailHelper.MailDomain.MailUser">
            <summary>
            登陆用户名
            </summary>
        </member>
        <member name="P:FSLib.Network.Mail.MailHelper.MailDomain.MailPass">
            <summary>
            登陆密码
            </summary>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.CreateNewImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,FSLib.Drawing.Image.ImageHelper.CreateImageScaleMethod)">
            <summary>
            从一个原始的图片对象生成一个新的对象
            </summary>
            <param name="OrgImage"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.CreateNewImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,FSLib.Drawing.Image.ImageHelper.CreateImageScaleMethod,System.Drawing.Color)">
            <summary>
            从一个原始的图片对象生成一个新的对象
            </summary>
            <param name="OrgImage"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
            <param name="scale"></param>
            <param name="fillColor"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.CreateNewImageFill(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.Drawing.Color)">
            <summary>
            使用 CreateImageScaleMethod.Fill 方法来生车功能一个新的位图对象
            </summary>
            <param name="OrgImage"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.CreateNewImageScale(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            使用 CreateImageScaleMethod.Scale 方法来生车功能一个新的位图对象
            </summary>
            <param name="OrgImage"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.CreateNewImageCut(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            使用 CreateImageScaleMethod.Cut 方法来生车功能一个新的位图对象
            </summary>
            <param name="OrgImage"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.SaveJpegQualityCodecsInfo(System.Drawing.Image,System.String,System.Int32)">
            <summary>
            按照指定的精度保存JPG图像
            </summary>
            <param name="image"></param>
            <param name="path"></param>
            <param name="quality"></param>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.LoadFromFile(System.String)">
            <summary>
            从文件加载图像(不会锁定文件)
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.SplitImage(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            按照指定尺寸分割图像
            </summary>
            <param name="filePath">图像的路径</param>
            <param name="sizeW">每个图像的宽度</param>
            <param name="sizeH">每个图像的高度</param>
            <param name="RowCount">行数</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Image.ImageHelper.SplitImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32@)">
            <summary>
            按照指定尺寸分割图像
            </summary>
            <param name="img">要分割的图像</param>
            <param name="sizeW">每个图像的宽度</param>
            <param name="sizeH">每个图像的高度</param>
            <param name="RowCount">行数</param>
            <returns></returns>
        </member>
        <member name="F:FSLib.Drawing.Image.ImageHelper.CreateImageScaleMethod.Scale">
            <summary>
            缩放以填充到指定大小(如宽高比不一样可能产生拉伸变形)
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.ImageHelper.CreateImageScaleMethod.Fill">
            <summary>
            缩放到合适大小,并用背景色填空空白区域
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Image.ImageHelper.CreateImageScaleMethod.Cut">
            <summary>
            缩放并裁剪图像以填充所有目标大小区域(不会变形)
            </summary>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.LoadCursor(System.String)">
            <summary>
            从一个文件中加载光标
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.GetCursorStateTagByIndex(FSLib.Drawing.Cursor.CursorHelper.CursorIndex)">
            <summary>
            获得状态码对应的tag名称
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.GetCursorStateNameByIndex(FSLib.Drawing.Cursor.CursorHelper.CursorIndex)">
            <summary>
            获得状态码对应的状态名
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.GetCursorIndexByName(System.String)">
            <summary>
            根据名称返回索引
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.ApplyCursorSchemaToSystem(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            应用鼠标方案到当前系统
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.LoadCursors(System.Collections.Generic.List{System.String})">
            <summary>
            从一个集合加载一个列表
            </summary>
            <param name="pathcollection"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.DrawCursorToBitmap(System.Windows.Forms.Cursor,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根据一个光标生成一个位图对象
            </summary>
            <param name="cursor"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.AddCursorsToImageList(System.Windows.Forms.ImageList,System.Collections.Generic.List{System.Windows.Forms.Cursor},System.Boolean)">
            <summary>
            把一个光标集合加入一个ImageList
            </summary>
            <param name="img"></param>
            <param name="curs"></param>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.CreateCursorsToImageList(System.Int32,System.Int32,System.Collections.Generic.List{System.Windows.Forms.Cursor},System.Boolean)">
            <summary>
            根据一个集合生成一个缩略图组
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="curs"></param>
            <param name="Stretch"></param>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.DeleteCursorSchema(FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo)">
            <summary>
            删除鼠标方案
            </summary>
            <param name="csi"></param>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorTags">
            <summary>
            获得鼠标状态所有枚举
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorNames">
            <summary>
            获得鼠标状态所有名称
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.GetSystemCursorSchemas">
            <summary>
            生成当前系统所有鼠标主题的类型
            </summary>
        </member>
        <member name="T:FSLib.Drawing.Cursor.CursorHelper.CursorIndex">
            <summary>
            鼠标类型索引
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.Arraw">
            <summary>
            正常选择
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.Help">
            <summary>
            帮助选择
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.AppStarting">
            <summary>
            后台运行
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.Wait">
            <summary>
            忙
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.CrossHair">
            <summary>
            精确定位
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.IBeam">
            <summary>
            选定文本
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.NwPen">
            <summary>
            手写
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.No">
            <summary>
            不可用
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.SizeWE">
            <summary>
            垂直调整
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.SizeNS">
            <summary>
            水平调整
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.SizeNWSE">
            <summary>
            对角线调整\
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.SizeNESW">
            <summary>
            对角线调整/
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.SizeAll">
            <summary>
            移动
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.UpArrow">
            <summary>
            候选
            </summary>
        </member>
        <member name="F:FSLib.Drawing.Cursor.CursorHelper.CursorIndex.Hand">
            <summary>
            超级链接
            </summary>
        </member>
        <member name="T:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo">
            <summary>
            光标方案对象
            </summary>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.#ctor(System.String,System.Boolean)">
            <summary>
            创建一个新的对象
            </summary>
            <param name="CName"></param>
            <param name="IsSystem"></param>
            <param name="isInUse"></param>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.#ctor">
            <summary>
            新建一个对象,表示当前正在使用的方案
            </summary>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.ToString">
             <summary>
            转化成string类型
             </summary>
             <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.GetSchemaContent(System.String,System.Boolean)">
            <summary>
            获得指定方案的内容
            </summary>
            <param name="name"></param>
            <param name="isSystem"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.GetSchemaContentArray(System.String,System.Boolean)">
            <summary>
            获得鼠标方案内容的数组形式
            </summary>
            <param name="name"></param>
            <param name="isSystem"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.GetSchemaContentDictionary(System.String,System.Boolean)">
            <summary>
            获得鼠标方案的字典形式
            </summary>
            <param name="name"></param>
            <param name="isSystem"></param>
            <returns></returns>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.IsInUse">
            <summary>
            是否是正在使用的方案
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.IsSystemDefine">
            <summary>
            是否是系统自带的
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.Name">
            <summary>
            方案名称
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.SchemaContent">
            <summary>
            获得鼠标方案的内容
            </summary>
            <returns></returns>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.GetSchemaCurrentContent">
            <summary>
            获得当前正在使用的方案
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.GetSchemaCurrentContentArray">
            <summary>
            获得当前指针风格的Array类型
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.GetSchemaCurrentContentDictionary">
            <summary>
            获得当前指针风格列表的字典形式
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.GetScheamContentArray">
            <summary>
            获得鼠标方案内容的数组形式
            </summary>
        </member>
        <member name="P:FSLib.Drawing.Cursor.CursorHelper.CursorSchemaInfo.SchemaContentDictionary">
            <summary>
            获得鼠标方案的字典形式
            </summary>
        </member>
        <member name="M:FSLib.Diagnostics.EventLog.WriteLog(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[],System.String,System.String)">
            <summary>
            写入消息到系统日志
            </summary>
            <param name="mess"></param>
            <param name="source"></param>
            <param name="DisplayName"></param>
        </member>
        <member name="M:FSLib.Diagnostics.EventLog.WriteLog(System.String)">
            <summary>
            写入消息到系统日志
            </summary>
            <param name="mess"></param>
        </member>
        <member name="T:FSLib.Reflection.Data.DataReaderFillPropertyHelper">
            <summary>
            由数据读取器生成对象并返回辅助对象
            </summary>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.FillPropertyWithDataReader(System.Data.Common.DbDataReader,System.String,System.String)">
            <summary>
            由数据读取器生成对象并返回
            </summary>
            <param name="dr"></param>
            <param name="TypeName"></param>
            <param name="assemblyPath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CreateSqlConsFromObject(System.Object,System.String)">
            <summary>
            生成插入语句
            </summary>
            <param name="obj"></param>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CreateSqlConsFromObject(System.Object,System.String,System.String)">
            <summary>
            生成更新语句
            </summary>
            <param name="obj"></param>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CreateSqlStateFromObject(System.Object,System.String)">
            <summary>
            生成插入语句
            </summary>
            <param name="obj"></param>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CreateSqlStateFromObject(System.Object,System.String,System.String)">
            <summary>
            生成更新语句
            </summary>
            <param name="obj"></param>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo">
            <summary>
            类型的对象,用于索引
            </summary>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.#ctor(System.String,System.String,System.Data.Common.DbDataReader)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.InitColumnIndex(System.Data.Common.DbDataReader)">
            <summary>
            根据阅读器初始化列
            </summary>
            <param name="dr"></param>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.Instance">
            <summary>
            生成一个实例对象并返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.Instance(System.Data.Common.DbDataReader)">
            <summary>
            生成一个实例对象并在填充数据后返回
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.CreateUpdateConstructor(System.String,System.String,System.Object)">
            <summary>
            生成一个更新数据的实例
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.CreateUpdateStatement(System.String,System.String,System.Object)">
            <summary>
            生成一个更新数据的语句
            </summary>
            <param name="tablename"></param>
            <param name="filter"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.CreateInsertConstructor(System.String,System.Object)">
            <summary>
            生成一个插入数据的实例
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.CreateInsertStatement(System.String,System.Object)">
            <summary>
            生成一个插入数据的语句
            </summary>
            <param name="tablename"></param>
            <param name="filter"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.AddValuesToBuilder(FSLib.Data.SqlHelper.SQLBuilder.SQLBuilderBase,System.Object)">
            <summary>
            将数据填充
            </summary>
            <param name="sb"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.Constructor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="P:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.Propertys">
            <summary>
            属性对象
            </summary>
        </member>
        <member name="P:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.ColumnIndex">
            <summary>
            在数据库访问器的列索引
            </summary>
        </member>
        <member name="P:FSLib.Reflection.Data.DataReaderFillPropertyHelper.CachedTypeInfo.ColumnTypes">
            <summary>
            列的类型
            </summary>
        </member>
        <member name="T:FSLib.IO.SerilizeHelper.SerializableDictionary`2">
            <summary>
            支持XML序列化的泛型Dictionary类
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:FSLib.IO.SerilizeHelper.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            从对象的XML表示形式生成该对象
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FSLib.IO.SerilizeHelper.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            将对象转换为其XML表示形式
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FSLib.IO.PathWrapper">
            <summary>
            Path对象包装
            </summary>
        </member>
        <member name="M:FSLib.IO.PathWrapper.CombineTo(System.String)">
            <summary>
            将路径组合起来
            </summary>
            <param name="path">路径</param>
            <returns>包装后的对象</returns>
        </member>
        <member name="M:FSLib.IO.PathWrapper.CombineAfter(System.String)">
            <summary>
            将路径组合起来
            </summary>
            <param name="path">路径</param>
            <returns>包装后的对象</returns>
        </member>
        <member name="M:FSLib.IO.PathWrapper.Expand">
            <summary>
            将当前路径进行展开
            </summary>
            <returns>包装后的对象</returns>
        </member>
        <member name="M:FSLib.IO.PathWrapper.GetDirectoryName">
            <summary>
            获得文件夹路径
            </summary>
            <returns>自身</returns>
        </member>
        <member name="M:FSLib.IO.PathWrapper.#ctor(System.String)">
            <summary>
            新建一个对象
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="P:FSLib.IO.PathWrapper.Path">
            <summary>
            获得或设置使用的文件路径
            </summary>
        </member>
        <member name="P:FSLib.IO.PathWrapper.IsDirectory">
            <summary>
            获得是否是文件夹
            </summary>
        </member>
        <member name="P:FSLib.IO.PathWrapper.IsFile">
            <summary>
            获得是否是文件
            </summary>
        </member>
        <member name="P:FSLib.IO.PathWrapper.AsFileInfo">
            <summary>
            转换为文件信息对象
            </summary>
        </member>
        <member name="P:FSLib.IO.PathWrapper.AsDirectoryInfo">
            <summary>
            转换为文件夹信息对象
            </summary>
        </member>
        <member name="P:FSLib.IO.PathWrapper.FileName">
            <summary>
            返回文件名
            </summary>
        </member>
        <member name="P:FSLib.IO.PathWrapper.Extension">
            <summary>
            返回扩展名
            </summary>
        </member>
        <member name="P:FSLib.IO.PathWrapper.ExtensionLowerCase">
            <summary>
            返回小写格式的扩展名
            </summary>
        </member>
        <member name="T:FSLib.IO.FileFormat.Lnk.ShellShortcut">
            <summary>
            .NET friendly wrapper for the ShellLink class
            </summary>
            <remarks>
              Wrote by Mattias Sjogren
            </remarks>
        </member>
        <member name="M:FSLib.IO.FileFormat.Lnk.ShellShortcut.#ctor(System.String)">
            
             <param name='linkPath'>
               Path to new or existing shortcut file (.lnk).
             </param>
            
        </member>
        <member name="M:FSLib.IO.FileFormat.Lnk.ShellShortcut.Save">
            <summary>
              Saves the shortcut to disk.
            </summary>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.Arguments">
            <value>
              Gets or sets the argument list of the shortcut.
            </value>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.Description">
            <value>
              Gets or sets a description of the shortcut.
            </value>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.WorkingDirectory">
            <value>
              Gets or sets the working directory (aka start in directory) of the shortcut.
            </value>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.Path">
            <value>
              Gets or sets the target path of the shortcut.
            </value>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.IconPath">
            <value>
              Gets or sets the path of the <see cref="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.Icon"/> assigned to the shortcut.
            </value>
            <summary>
              <seealso cref="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.IconIndex"/>
            </summary>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.IconIndex">
            <value>
              Gets or sets the index of the <see cref="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.Icon"/> assigned to the shortcut.
              Set to zero when the <see cref="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.IconPath"/> property specifies a .ICO file.
            </value>
            <summary>
              <seealso cref="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.IconPath"/>
            </summary>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.Icon">
            <value>
              Retrieves the Icon of the shortcut as it will appear in Explorer.
              Use the <see cref="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.IconPath"/> and <see cref="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.IconIndex"/>
              properties to change it.
            </value>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.WindowStyle">
            <value>
              Gets or sets the System.Diagnostics.ProcessWindowStyle value
              that decides the initial show state of the shortcut target. Note that
              ProcessWindowStyle.Hidden is not a valid property value.
            </value>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.Hotkey">
            <value>
              Gets or sets the hotkey for the shortcut.
            </value>
        </member>
        <member name="P:FSLib.IO.FileFormat.Lnk.ShellShortcut.ShellLink">
            <summary>
              Returns a reference to the internal ShellLink object,
              which can be used to perform more advanced operations
              not supported by this wrapper class, by using the
              IShellLink interface directly.
            </summary>
        </member>
        <member name="M:FSLib.Drawing.Color.ColorHelper.GetColorFromString(System.String)">
            <summary>
            把十六进制转化为颜色
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.Security.Encode">
            <summary>
            实现数字加密方法
            </summary>
            <remarks>加密主要使用MD5以及SHA加密方法</remarks>
        </member>
        <member name="M:FSLib.Security.Encode.MD5(System.String)">
            <summary>
            执行MD5加密方法
            </summary>
            <param name="sMessage">要加密的源字符串</param>
            <returns>返回加密后的Hash值</returns>
            <remarks>最后与2005年七月改写</remarks>
        </member>
        <member name="M:FSLib.Security.Encode.MD5(System.String,FSLib.Security.Encode.MD5Type)">
            <summary>
            执行MD5加密方法
            </summary>
            <param name="sMessage">要加密的源字符串</param>
            <param name="Type">加密的种类，枚举为MD5Type，指明了返回密钥的结构</param>
            <returns>返回加密后的Hash值</returns>
            <remarks>最后与2005年七月改写</remarks>
        </member>
        <member name="M:FSLib.Security.Encode.MD5(System.String,FSLib.Security.Encode.MD5Type,FSLib.Security.Encode.EncodingOutType)">
            <summary>
            执行MD5加密方法
            </summary>
            <param name="sMessage">要加密的源字符串</param>
            <param name="Type">加密的种类，枚举为MD5Type，指明了返回密钥的结构</param>
            <param name="ChCase">返回密钥的大小写，为枚举值</param>
            <returns>返回加密后的Hash值</returns>
            <remarks>最后与2005年七月改写</remarks>
        </member>
        <member name="M:FSLib.Security.Encode.SHA(System.String)">
            <summary>
            执行SHA加密方法
            </summary>
            <param name="sMessage">要加密的源字符串</param>
            <returns>返回加密后的Hash值</returns>
            <remarks>最后与2005年七月改写</remarks>
        </member>
        <member name="M:FSLib.Security.Encode.SHA(System.String,FSLib.Security.Encode.SHAType)">
            <summary>
            执行SHA加密方法
            </summary>
            <param name="sMessage">要加密的源字符串</param>
            <param name="Type">加密的种类，枚举为SHAType，指明了返回密钥的结构</param>
            <returns>返回加密后的Hash值</returns>
            <remarks>最后与2005年七月改写</remarks>
        </member>
        <member name="M:FSLib.Security.Encode.SHA(System.String,FSLib.Security.Encode.SHAType,FSLib.Security.Encode.EncodingOutType)">
            <summary>
            执行SHA加密方法
            </summary>
            <param name="sMessage">要加密的源字符串</param>
            <param name="Type">加密的种类，枚举为SHAType，指明了返回密钥的结构</param>
            <param name="ChCase">返回密钥的大小写，为枚举值</param>
            <returns>返回加密后的Hash值</returns>
            <remarks>最后与2005年七月改写</remarks>
        </member>
        <member name="T:FSLib.Security.Encode.MD5Type">
            <summary>
            枚举MD5输出结构
            </summary>
            <remarks>用于MD5加密</remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_32">
            <summary>
            返回完整的32位密钥
            </summary>
            <remarks>正常情况下应该使用此参数,以返回完整的四十位密钥</remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_16_0">
            <summary>
            返回密钥中的第一位到第十六位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_16_8">
            <summary>
            返回密钥中的第九位到第二十四位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_16_16">
            <summary>
            返回密钥中的第十七位到第二十四位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_8_0">
            <summary>
            返回密钥中的第一位到第八位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_8_8">
            <summary>
            返回密钥中的第九位到第十六位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_8_16">
            <summary>
            返回密钥中的第十七位到第二十四位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_8_24">
            <summary>
            返回密钥中的第二十五位到第三十二位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_24_0">
            <summary>
            返回密钥中的第一位到第二十四位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.MD5Type.BIT_24_8">
            <summary>
            返回密钥中的第九位到第三十二位
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Security.Encode.SHAType">
            <summary>
            枚举SHA算法输出结构
            </summary>
            <remarks>用于SHA加密方法</remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_40">
            <summary>
            返回完整的40位密钥
            </summary>
            <remarks>正常情况下应该使用此参数,以返回完整的四十位密钥</remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_8_0">
            <summary>
            返回密钥中的第一位到第八位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_8_8">
            <summary>
            返回密钥中的第九位到第十六位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_8_16">
            <summary>
            返回密钥中的第十七位到第二十四位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_8_24">
            <summary>
            返回密钥中的第二十五位到第三十二位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_8_32">
            <summary>
            返回密钥中的第三十三位到第四十位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_16_0">
            <summary>
            返回密钥中的第一位到第十六位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_16_8">
            <summary>
            返回密钥中的第九位到二十四位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_16_16">
            <summary>
            返回密钥中的第十七位到第三十二位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_16_24">
            <summary>
            返回密钥中的第二十五位到第四十位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_24_0">
            <summary>
            返回密钥中的第一位到第二十四位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_24_8">
            <summary>
            返回密钥中的第九位到第三十二位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_24_16">
            <summary>
            返回密钥中的第十七位到第四十位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_32_0">
            <summary>
            返回密钥中的第一位到第三十二位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.SHAType.BIT_32_8">
            <summary>
            返回密钥中的第九位到第四十位
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Security.Encode.EncodingOutType">
            <summary>
            枚举输出的字符大小写
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.EncodingOutType.Lower">
            <summary>
            小写
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.Security.Encode.EncodingOutType.Upper">
            <summary>
            大写
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Data.SqlServer.SqlServerExtract">
            <summary>
            针对Sql Server的扩展类
            </summary>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.CreateConnection(System.String)">
            <summary>
            创建数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.CreateCommand(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            创建数据库命令
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            创建数据库命令
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="isProcedure"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.ChangeIdEntity(System.Data.SqlClient.SqlConnection,System.String,System.String,System.Int32)">
            <summary>
            更改主键列的自增值开始数据
            </summary>
            <param name="connection">数据库连接</param>
            <param name="tableName">数据表名</param>
            <param name="idFieldName">自增列名称</param>
            <param name="seed">开始数据</param>
            <returns>开始数据</returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.CreateCommand(System.String,System.String,System.Boolean)">
            <summary>
            创建数据库命令
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="sql">要执行的语句</param>
            <param name="isProcedure">是否是存储过程</param>
            <returns>创建的结果</returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandNonQuery(System.Data.SqlClient.SqlCommand)">
            <summary>
            运行命令-NonQuery方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandNonQuery(System.Data.SqlClient.SqlCommand,System.Boolean)">
            <summary>
            运行命令-NonQuery方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandScalar(System.Data.SqlClient.SqlCommand)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandScalar(System.Data.SqlClient.SqlCommand,System.Boolean)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandScalar``1(System.Data.SqlClient.SqlCommand)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandScalar``1(System.Data.SqlClient.SqlCommand,System.Boolean)">
            <summary>
            运行命令-Scalar方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandReader(System.Data.SqlClient.SqlCommand)">
            <summary>
            运行命令-DataReader方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.RunCommandReader(System.Data.SqlClient.SqlCommand,System.Boolean)">
            <summary>
            运行命令-DataReader方式
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.AddParameter(System.Data.SqlClient.SqlCommand,System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.AddParameter(System.Data.SqlClient.SqlCommand,System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.AddParameter(System.Data.SqlClient.SqlCommand,System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.AddParameter(System.Data.SqlClient.SqlCommand,System.String,System.Int32)">
            <summary>
            添加参数
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.ToList``1(System.Data.SqlClient.SqlDataReader)">
            <summary>
            由DataReader生成列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Data.SqlServer.SqlServerExtract.ToList``1(System.Data.SqlClient.SqlDataReader,System.Boolean)">
            <summary>
            由DataReader生成列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="reader"></param>
            <param name="closeConnection"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.Value.Special.StringBugFix.FixJpSpecWordsForSearch(System.String,System.Int32)">
            <summary>
            修正因为特殊的日文平假名导致的错误，并且在修正后将指定长度截断（0时不截断）
            </summary>
            <param name="Str"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.Spec.AutoLoader.IAutoLoadChecker">
            <summary>
            自动运行接口
            </summary>
        </member>
        <member name="T:FSLib.Network.Http.HttpClient">
            <summary>
            Web Client
            </summary>
        </member>
        <member name="T:FSLib.IO.INISegment">
            <summary>
            配置节
            </summary>
        </member>
        <member name="F:FSLib.IO.INISegment.Items">
            <summary>
            所有配置项集合
            </summary>
        </member>
        <member name="M:FSLib.IO.INISegment.#ctor(FSLib.IO.INISegments,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="o">Owner</param>
            <param name="vName">配置节名称</param>
        </member>
        <member name="M:FSLib.IO.INISegment.Clear">
            <summary>
            清除所有设置项
            </summary>
        </member>
        <member name="P:FSLib.IO.INISegment.Name">
            <summary>
            获取配置节的名称
            </summary>
        </member>
        <member name="P:FSLib.IO.INISegment.Owner">
            <summary>
            获取Segment的Owner：INISegments集合
            </summary>
        </member>
        <member name="T:FSLib.IO.INISegments">
            <summary>
            配置节集合
            </summary>
        </member>
        <member name="M:FSLib.IO.INISegments.#ctor(FSLib.IO.INIFile)">
            <summary>
            构造函数
            </summary>
            <param name="o">Owner</param>
        </member>
        <member name="M:FSLib.IO.INISegments.Add(FSLib.IO.INISegment)">
            <summary>
            添加一个已经存在的配置节
            </summary>
            <param name="o">配置节对象</param>
        </member>
        <member name="M:FSLib.IO.INISegments.Add(System.String)">
            <summary>
            添加一个可能不存在的配置节（创建一个配置节）
            </summary>
            <param name="vName">配置节名称</param>
            <returns>添加的配置节</returns>
        </member>
        <member name="M:FSLib.IO.INISegments.Contains(System.String)">
            <summary>
            获取是否包含某配置节
            </summary>
            <param name="vName">配置节名称</param>
            <returns>是否</returns>
        </member>
        <member name="P:FSLib.IO.INISegments.Owner">
            <summary>
            获取此对象的Owner：INIFile类
            </summary>
        </member>
        <member name="P:FSLib.IO.INISegments.Keys">
            <summary>
            获取索引集合
            </summary>
        </member>
        <member name="P:FSLib.IO.INISegments.Values">
            <summary>
            获取值集合
            </summary>
        </member>
        <member name="P:FSLib.IO.INISegments.Item(System.String)">
            <summary>
            获取配置节
            </summary>
        </member>
        <member name="T:FSLib.IO.INIItem">
            <summary>
            配置项
            </summary>
        </member>
        <member name="M:FSLib.IO.INIItem.#ctor(FSLib.IO.INIItems,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="o">Owner</param>
            <param name="vName">名称</param>
            <param name="vValue">值</param>
        </member>
        <member name="P:FSLib.IO.INIItem.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="P:FSLib.IO.INIItem.Value">
            <summary>
            获取设置值
            </summary>
        </member>
        <member name="P:FSLib.IO.INIItem.Owner">
            <summary>
            获取Owner
            </summary>
        </member>
        <member name="T:FSLib.IO.INIItems">
            <summary>
            配置项集合
            </summary>
        </member>
        <member name="M:FSLib.IO.INIItems.#ctor(FSLib.IO.INISegment)">
            <summary>
            构造函数
            </summary>
            <param name="o">Owner</param>
        </member>
        <member name="M:FSLib.IO.INIItems.Add(FSLib.IO.INIItem)">
            <summary>
            添加一个已经存在的配置项
            </summary>
            <param name="o">配置项</param>
        </member>
        <member name="M:FSLib.IO.INIItems.Contains(System.String)">
            <summary>
            获取是否包含指定名称的配置项
            </summary>
            <param name="vName">配置项名称</param>
            <returns>是否</returns>
        </member>
        <member name="M:FSLib.IO.INIItems.Add(System.String,System.String)">
            <summary>
            添加一个可能不存在的配置项（创建一个配置项）
            </summary>
            <param name="vName">配置项名</param>
            <param name="vValue">配置项值</param>
            <returns>创建的配置项INIItem对象</returns>
        </member>
        <member name="P:FSLib.IO.INIItems.Owner">
            <summary>
            获取Owner
            </summary>
        </member>
        <member name="P:FSLib.IO.INIItems.Keys">
            <summary>
            获取所有的索引集合
            </summary>
        </member>
        <member name="P:FSLib.IO.INIItems.Values">
            <summary>
            获取所有的值集合
            </summary>
        </member>
        <member name="P:FSLib.IO.INIItems.Item(System.String)">
            <summary>
            获取指定索引的配置项
            </summary>
        </member>
        <member name="T:FSLib.IO.INIFile">
            <summary>
            INI文件操作类
            </summary>
        </member>
        <member name="F:FSLib.IO.INIFile.Segments">
            <summary>
            所有的配置节
            </summary>
        </member>
        <member name="M:FSLib.IO.INIFile.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="vPath">INI文件路径</param>
        </member>
        <member name="M:FSLib.IO.INIFile.GetInt(System.String,System.String,System.Int32)">
            <summary>
            读取一个整数型的配置值
            </summary>
            <param name="segName">配置节名</param>
            <param name="keyName">配置项名</param>
            <param name="iDefault">默认值</param>
            <returns>配置值</returns>
        </member>
        <member name="M:FSLib.IO.INIFile.GetString(System.String,System.String,System.String)">
            <summary>
            读取一个字符串型配置值
            </summary>
            <param name="segName">配置节名</param>
            <param name="keyName">配置项名</param>
            <param name="sDefault">默认值</param>
            <returns>配置值</returns>
        </member>
        <member name="M:FSLib.IO.INIFile.SetString(System.String,System.String,System.String)">
            <summary>
            写入配置项
            </summary>
            <param name="segName">配置节名</param>
            <param name="keyName">配置项名</param>
            <param name="vValue">配置值</param>
        </member>
        <member name="M:FSLib.IO.INIFile.WriteSegment(System.String,System.String)">
            <summary>
            写入一个配置节
            </summary>
            <param name="segName">配置节名</param>
            <param name="vData">数据</param>
            <remarks>
            数据为多个配置项组成的字符串，每个配置项之间用 "\0" 分割
            字符串最后用 "\0\0" 结束
            </remarks>
            <example>
            WriteSegment(segName,"\0\0"); 可以用于清除一个配置节下的所有配置项
            </example>
        </member>
        <member name="M:FSLib.IO.INIFile.GetSegment(FSLib.IO.INISegment)">
            <summary>
            读取一个配置节下面的所有配置项
            </summary>
            <param name="o">要读取的配置节</param>
        </member>
        <member name="P:FSLib.IO.INIFile.Path">
            <summary>
            获取INI文件路径
            </summary>
        </member>
    </members>
</doc>
